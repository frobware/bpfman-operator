# Red Hat rebranding tool for bpfman-operator OpenShift bundle
#
# This Containerfile takes upstream bpfman-operator bundles and
# transforms them for Red Hat distribution by:
# - Updating ClusterServiceVersion (CSV) with Red Hat branding and image references
# - Adding architecture labels and OpenShift feature annotations
# - Updating ConfigMap with Red Hat image pullspecs
#
# To build locally for testing:
#   podman build -f Containerfile.bundle.openshift -t bpfman-bundle .
#
# To use a different Go builder image (for local testing without brew registry access):
#   podman build -f Containerfile.bundle.openshift --build-arg GO_BUILDER_IMAGE_REF=golang:1.23 -t bpfman-bundle .
#
# To test the Go tools locally without container build:
#   go run hack/openshift/update_bundle.go --dry-run --csv-file bundle/manifests/bpfman-operator.clusterserviceversion.yaml --image-pullspec "$(cat hack/openshift/konflux/images/bpfman-operator.txt)"
#   go run hack/openshift/update_configmap.go --dry-run --configmap-file bundle/manifests/bpfman-config_v1_configmap.yaml --agent-pullspec "$(cat hack/openshift/konflux/images/bpfman-agent.txt)" --bpfman-pullspec "$(cat hack/openshift/konflux/images/bpfman.txt)"
#
# To inspect the resulting bundle:
#   podman create --name temp-bundle bpfman-bundle
#   podman cp temp-bundle:/manifests/bpfman-operator.clusterserviceversion.yaml ./
#   podman rm temp-bundle

ARG GO_BUILDER_IMAGE_REF=brew.registry.redhat.com/rh-osbs/openshift-golang-builder:v1.23
FROM ${GO_BUILDER_IMAGE_REF} AS builder

WORKDIR /usr/src/redhat-rebrand

COPY go.mod go.sum ./
COPY vendor/ ./vendor/
COPY hack/openshift/ ./hack/openshift/

COPY bundle/manifests /manifests/
COPY bundle/metadata /metadata/
COPY bundle/tests/scorecard /tests/scorecard/

RUN go run hack/openshift/update_bundle.go \
    --csv-file /manifests/bpfman-operator.clusterserviceversion.yaml \
    --image-pullspec "$(cat hack/openshift/konflux/images/bpfman-operator.txt)"

RUN go run hack/openshift/update_configmap.go \
    --configmap-file /manifests/bpfman-config_v1_configmap.yaml \
    --agent-pullspec "$(cat hack/openshift/konflux/images/bpfman-agent.txt)" \
    --bpfman-pullspec "$(cat hack/openshift/konflux/images/bpfman.txt)"

FROM scratch

# Core bundle labels.
LABEL operators.operatorframework.io.bundle.mediatype.v1=registry+v1
LABEL operators.operatorframework.io.bundle.manifests.v1=manifests/
LABEL operators.operatorframework.io.bundle.metadata.v1=metadata/
LABEL operators.operatorframework.io.bundle.package.v1=bpfman-operator
LABEL operators.operatorframework.io.bundle.channels.v1=alpha
LABEL operators.operatorframework.io.metrics.builder=operator-sdk-v1.26.0
LABEL operators.operatorframework.io.metrics.mediatype.v1=metrics+v1
LABEL operators.operatorframework.io.metrics.project_layout=go.kubebuilder.io/v3

# Labels for testing.
LABEL operators.operatorframework.io.test.mediatype.v1=scorecard+v1
LABEL operators.operatorframework.io.test.config.v1=tests/scorecard/

# Labels for konflux to release the images
LABEL name="bpfman-operator" \
      com.redhat.component="bpfman-operator" \
      io.k8s.display-name="Bpfman Operator" \
      description="The bpfman-operator manage bpfman ebpf programs on every node." \
      distribution-scope=public \
      io.k8s.description="The bpfman-operator manage bpfman programs on every node. ." \
      io.openshift.tags="bpfman-operator" \
      version="0.5.6" \
      release="0.5.6" \
      url="https://github.com/openshift/bpfman-operator" \
      vendor="Red Hat, Inc." \
      summary="Bpfman Operator"

# Copy files to locations specified by labels.
COPY --from=builder /manifests /manifests/
COPY --from=builder /metadata /metadata/
COPY --from=builder /tests/scorecard /tests/scorecard/
